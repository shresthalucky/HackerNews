{"version":3,"sources":["api/endpoints.js","hoc/withLoading.js","components/Story/Post.jsx","components/Story/Story.jsx","components/Story/index.js","components/List/List.jsx","pages/Home/Home.js","constants.js","components/Comment/Post.jsx","components/Comment/Comment.jsx","components/Comment/index.js","pages/Detail/Detail.js","hoc/withContainer.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","itemUrl","id","withLoading","Component","isLoading","type","props","className","Post","data","headingElement","useParams","storyId","to","title","by","kids","length","Date","time","toLocaleString","href","url","target","EnhancedPost","Story","getStory","fetch","then","response","json","setState","state","activeComments","initialLoad","showComments","allCommentsLoaded","this","React","List","EnchancedList","list","map","key","onClick","loadStories","disabled","allLoaded","Home","getTopStories","storiesList","endIndex","activeStories","slice","ReactHtmlParser","text","Comment","getReplies","EnhancedStory","Detail","match","params","loadComments","withContainer","EnhancedHome","EnhancedDetail","App","basename","process","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a966927d.chunk.js","sourcesContent":["const baseUrl = 'https://hacker-news.firebaseio.com/v0';\nconst topStoriesUrl = baseUrl + '/topstories.json';\nconst itemUrl = (id) => `${baseUrl}/item/${id}.json`;\n\nexport { topStoriesUrl, itemUrl };","import React from 'react';\n\nfunction withLoading(Component) {\n\n  function LoadingComponent({ isLoading, type, ...props }) {\n\n    if (!isLoading) {\n      return (<Component {...props} />)\n    }\n\n    switch (type) {\n      case ('story'):\n        return (\n          <div className=\"loading-bar\">\n            <div className=\"loading-bar__heading\"></div>\n            <div className=\"loading-bar__description\"></div>\n          </div>\n        );\n      case ('comment'):\n        return (\n          <div className=\"loading-bar\">\n            <div className=\"loading-bar__description\"></div>\n          </div>\n        );\n      default:\n        return (<div>Loading...</div>);\n    }\n  }\n\n  return LoadingComponent;\n}\n\nexport default withLoading;","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { FiUser, FiMessageSquare, FiLink, FiClock } from 'react-icons/fi';\n\n\nfunction Post({ data, ...props }) {\n\n  const { storyId } = useParams();\n  const headingElement = storyId ?\n    <h1 className=\"story__title\"><Link to={`/${data.id}`}>{data.title}</Link></h1> :\n    <h2 className=\"story__title\"><Link to={`/${data.id}`}>{data.title}</Link></h2>\n\n  return (\n    <div>\n      {headingElement}\n      <div className=\"description story__description\">\n        <span className=\"description__by\"><FiUser /> <strong>{data.by}</strong></span>\n        <span className=\"description__comments\"><FiMessageSquare /> {data.kids ? data.kids.length : '0'}</span>\n        <span className=\"description__time\"><FiClock /> {new Date(data.time * 1000).toLocaleString()}</span>\n        <span className=\"description__permalink\"><a href={data.url} target=\"_new\" title={data.title}><FiLink /></a></span>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import React from 'react';\n\nimport { itemUrl } from '../../api/endpoints';\nimport withLoading from '../../hoc/withLoading';\nimport Post from './Post';\n\nconst EnhancedPost = withLoading(Post);\n\nclass Story extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {},\n      isLoading: true,\n      activeComments: [],\n      initialLoad: false,\n      showComments: false,\n      allCommentsLoaded: false\n    }\n  }\n\n  componentDidMount() {\n    this.getStory();\n  }\n\n  getStory = () => {\n    fetch(itemUrl(this.props.id))\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          data: { ...data },\n          isLoading: false,\n        })\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"story\">\n        <EnhancedPost\n          type=\"story\"\n          isLoading={this.state.isLoading}\n          data={this.state.data}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Story;","import Story from './Story';\n\nexport default Story;","import React from 'react';\n\nimport Story from '../Story';\n\nfunction List({ list, ...props }) {\n  return (\n    <div>\n      <div className=\"stories-list\">\n        {list.map(id => <Story id={id} key={id} />)}\n      </div>\n\n      <button className=\"btn stories-list__btn\"\n        onClick={props.loadStories}\n        disabled={props.allLoaded}>\n        {props.allLoaded ? 'No More Stories' : 'More Stories'}\n      </button>\n\n    </div>\n  )\n}\n\nexport default List;","import React from 'react';\n\nimport { topStoriesUrl } from '../../api/endpoints';\nimport { storiesPerLoad } from '../../constants';\nimport withLoading from '../../hoc/withLoading';\nimport List from '../../components/List';\n\nconst EnchancedList = withLoading(List);\nclass Home extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      activeStories: [],\n      allLoaded: false,\n      isLoading: true\n    }\n\n    this.storiesList = [];\n  }\n\n  componentDidMount() {\n    this.getTopStories();\n  }\n\n  getTopStories = () => {\n    fetch(topStoriesUrl)\n      .then(response => response.json())\n      .then(data => {\n        this.storiesList = [...data];\n        this.loadStories();\n        this.setState({\n          isLoading: false\n        })\n      });\n  }\n\n  loadStories = () => {\n    const endIndex = this.state.activeStories.length + storiesPerLoad;\n\n    this.setState({\n      activeStories: [...this.storiesList.slice(0, endIndex)]\n    });\n\n    if (this.storiesList.length === this.state.activeStories.length) {\n      this.setState({\n        allLoaded: true\n      })\n    }\n  }\n\n  render() {\n    return (\n      <EnchancedList\n        type=\"story\"\n        isLoading={this.state.isLoading}\n        list={this.state.activeStories}\n        loadStories={this.loadStories}\n        allLoaded={this.state.allLoaded}\n      />\n    )\n  }\n}\n\nexport default Home;","export const storiesPerLoad = 10;\nexport const commentsPerLoad = 1;","import React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { FiUser, FiMessageSquare, FiClock } from 'react-icons/fi';\n\nfunction Post({ data, ...props }) {\n  return (\n    <div className=\"comment\">\n      <div className=\"description comment__description\">\n        <span className=\"description__by\"><FiUser /> <strong>{data.by}</strong></span>\n        <span className=\"description__comments\"><FiMessageSquare /> {data.kids ? data.kids.length : '0'}</span>\n        <span className=\"description__time\"><FiClock /> {new Date(data.time * 1000).toLocaleString()}</span>\n      </div>\n      {ReactHtmlParser(data.text)}\n    </div>\n  )\n}\n\nexport default Post;","import React from 'react';\n\nimport { itemUrl } from '../../api/endpoints';\nimport withLoading from '../../hoc/withLoading';\nimport Post from '../Comment/Post';\n\nconst EnhancedPost = withLoading(Post);\n\nclass Comment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {},\n      isLoading: true,\n    }\n  }\n\n  componentDidMount() {\n    this.getReplies();\n  }\n\n  getReplies = () => {\n    fetch(itemUrl(this.props.id))\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          data: { ...data },\n          isLoading: false,\n        });\n      });\n  }\n\n  render() {\n\n    return (\n      <div className=\"comment-wrapper\">\n        <EnhancedPost\n          type=\"comment\"\n          isLoading={this.state.isLoading}\n          data={this.state.data}\n        />\n\n        {this.state.data.kids && this.state.data.kids.map(id => <Comment id={id} key={id} />)}\n      </div>\n    )\n  }\n}\n\nexport default Comment;","import Comment from './Comment';\n\nexport default Comment;","import React from 'react';\n\nimport { commentsPerLoad } from '../../constants';\nimport { itemUrl } from '../../api/endpoints';\nimport Post from '../../components/Story/Post';\nimport Comment from '../../components/Comment';\nimport withLoading from '../../hoc/withLoading';\n\nconst EnhancedStory = withLoading(Post);\n\nclass Detail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {},\n      isLoading: true,\n      activeComments: [],\n      allCommentsLoaded: false\n    }\n  }\n\n  componentDidMount() {\n    this.getStory();\n  }\n\n  getStory = () => {\n    fetch(itemUrl(this.props.match.params.storyId))\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          data: { ...data },\n          isLoading: false,\n        }, () => {\n          if (this.state.data.kids) {\n            this.loadComments()\n          } else {\n            this.setState({ allCommentsLoaded: true });\n          }\n        });\n      });\n  }\n\n  loadComments = () => {\n    const endIndex = this.state.activeComments.length + commentsPerLoad;\n\n    this.setState({\n      activeComments: [...this.state.data.kids.slice(0, endIndex)]\n    }, () => {\n\n      if (this.state.data.kids.length === this.state.activeComments.length) {\n        this.setState({\n          allCommentsLoaded: true\n        });\n\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <EnhancedStory\n          isLoading={this.state.isLoading}\n          data={this.state.data}\n          type=\"story\"\n        />\n\n        {this.state.activeComments.map(id => <Comment id={id} key={id} />)}\n\n        <button\n          className=\"btn\"\n          onClick={this.loadComments}\n          disabled={this.state.allCommentsLoaded}>\n          {this.state.allCommentsLoaded ? 'No More Comments' : 'More Comments'}\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default Detail;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction withContainer(Component) {\n\n  function containerComponent(props) {\n\n    return (\n      <div className=\"main-wrapper\">\n        <header className=\"header\">\n          <div className=\"container\">\n            <h1>\n              <Link to=\"/\">HackerNews</Link>\n            </h1>\n          </div>\n        </header>\n        <main>\n          <div className=\"container\">\n            <Component {...props} />\n          </div>\n        </main>\n        <footer className=\"footer\">\n          <div className=\"container\">\n            <span className=\"footer__text\">\n              Built using <a href=\"https://github.com/HackerNews/API\" target=\"_new\" title=\"HackerNews API\">HackerNews API</a>\n            </span>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n\n  return containerComponent;\n}\n\nexport default withContainer;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './pages/Home/Home';\nimport Detail from './pages/Detail/Detail';\nimport withContainer from './hoc/withContainer';\n\nconst EnhancedHome = withContainer(Home);\nconst EnhancedDetail = withContainer(Detail);\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/\" component={EnhancedHome} />\n      <Route exact path=\"/:storyId\" component={EnhancedDetail} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}