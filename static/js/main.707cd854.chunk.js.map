{"version":3,"sources":["hoc/withLoading.js","api/helpers.js","api/endpoints.js","actions/storyActions.js","components/Story/Post.jsx","components/Story/Story.jsx","components/Story/index.js","components/List/List.jsx","pages/Home/Home.js","constants.js","components/Comment/Post.jsx","components/Comment/Comment.jsx","actions/commentActions.js","components/Comment/index.js","pages/Detail/Detail.js","hoc/withContainer.js","App.js","reducers/index.js","reducers/storyReducer.js","reducers/commentReducer.js","store.js","serviceWorker.js","index.js"],"names":["withLoading","Component","isLoading","type","error","props","className","handleError","response","ok","Error","baseUrl","itemUrl","id","fetchStory","dispatch","payload","requestStory","fetch","then","json","data","Post","EnhancedPost","headingElement","useParams","storyId","to","title","by","kids","length","Date","time","toLocaleString","href","url","target","connect","story","storyDetail","storiesDetail","useState","setIsLoading","setStory","isError","setIsError","useEffect","catch","Story","List","EnchancedList","stories","map","key","onClick","handleLoadMoreStories","disabled","allStoriesLoaded","fetchStories","activeStories","setActiveStories","setAllStoriesLoaded","slice","useCallback","endIndex","ReactHtmlParser","text","ConnectedComment","comment","commentDetail","comments","fetchComment","setComment","Comment","setComments","activeComments","setActiveComments","allCommentsLoaded","setAllCommentsLoaded","match","params","handleLoadMoreComments","withContainer","EnhancedHome","Home","EnhancedDetail","Detail","App","basename","process","exact","path","component","reducers","combineReducers","state","isFetching","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"kMAwCeA,MAtCf,SAAqBC,GAmCnB,OAjCA,YAAiE,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAUC,EAAS,4CAE9D,GAAID,EACF,OACE,yBAAKE,UAAU,iBACb,iDAKN,IAAKJ,EACH,OAAQ,kBAACD,EAAcI,GAGzB,OAAQF,GACN,IAAM,QACJ,OACE,yBAAKG,UAAU,eACb,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,8BAGrB,IAAM,UACJ,OACE,yBAAKA,UAAU,eACb,yBAAKA,UAAU,8BAGrB,QACE,OAAQ,8CCjChB,SAASC,EAAYC,GACnB,IAAKA,EAASC,GAAI,MAAMC,MAAMF,GAC9B,OAAOA,ECFT,IAAMG,EAAU,wCAEVC,EAAU,SAACC,GAAD,gBAAWF,EAAX,iBAA2BE,EAA3B,UCsCHC,EAAa,SAACD,GACzB,OAAO,SAACE,GAGN,OAFAA,EAZwB,SAACF,GAAD,MAAS,CACnCV,KAzB2B,gBA0B3Ba,QAASH,GAUEI,CAAaJ,IAEfK,MAAMN,EAAQC,IAClBM,KAAKZ,GACLY,MAAK,SAACX,GAAD,OAAcA,EAASY,UAC5BD,MAAK,SAACE,GACLN,EAb4B,CAClCZ,KA7BuB,YA8BvBa,QAWwBK,S,cCbXC,IC3BTC,EAAevB,GDHrB,YAAmC,IAAnBqB,EAAkB,EAAlBA,KAGRG,GAH0B,wBAEZC,cAAZC,QAEN,wBAAIpB,UAAU,gBAAe,kBAAC,IAAD,CAAMqB,GAAE,WAAMN,EAAKR,KAAOQ,EAAKO,QAC5D,wBAAItB,UAAU,gBAAe,kBAAC,IAAD,CAAMqB,GAAE,WAAMN,EAAKR,KAAOQ,EAAKO,SAE9D,OACE,6BACGJ,EACD,yBAAKlB,UAAU,kCACb,0BAAMA,UAAU,mBACd,kBAAC,IAAD,MADF,IACa,gCAASe,EAAKQ,KAE3B,0BAAMvB,UAAU,yBACd,kBAAC,IAAD,MADF,IACuBe,EAAKS,KAAOT,EAAKS,KAAKC,OAAS,KAEtD,0BAAMzB,UAAU,qBACd,kBAAC,IAAD,MADF,IACe,IAAI0B,KAAiB,IAAZX,EAAKY,MAAaC,kBAE1C,0BAAM5B,UAAU,0BACd,uBAAG6B,KAAMd,EAAKe,IAAKC,OAAO,OAAOT,MAAOP,EAAKO,OAC3C,kBAAC,IAAD,aCWZ,IAQeU,eARS,SAAC,EAAD,OAAGC,EAAH,EAAGA,MAAW1B,EAAd,EAAcA,GAAd,MAAwB,CAC9C2B,YAAaD,EAAME,cAAc5B,OAGR,SAACE,GAAD,MAAe,CACxCD,WAAY,SAACD,GAAD,OAAQE,EAASD,EAAWD,QAG3ByB,EApCf,YAAiD,IAAhCxB,EAA+B,EAA/BA,WAAYD,EAAmB,EAAnBA,GAAI2B,EAAe,EAAfA,YAAe,EACZE,oBAAS,GADG,mBACvCxC,EADuC,KAC5ByC,EAD4B,OAEpBD,mBAAS,IAFW,mBAEvCH,EAFuC,KAEhCK,EAFgC,OAGhBF,oBAAS,GAHO,mBAGvCG,EAHuC,KAG9BC,EAH8B,KAgB9C,OAXAC,qBAAU,WACRjC,EAAWD,GAAImC,OAAM,kBAAMF,GAAW,QACrC,CAACjC,EAAIC,IAERiC,qBAAU,WACJP,IACFI,EAAS,eAAKJ,IACdG,GAAa,MAEd,CAACH,IAGF,yBAAKlC,UAAU,SACb,kBAACiB,EAAD,CACEpB,KAAK,QACLC,MAAOyC,EACP3C,UAAWA,EACXmB,KAAMkB,QC9BCU,ICmBAC,ICZTC,EAAgBnD,GDLtB,YAAsC,IAAtBoD,EAAqB,EAArBA,QAAY/C,EAAS,2BACnC,OACE,6BACE,yBAAKC,UAAU,gBACZ8C,EAAQC,KAAI,SAAAxC,GAAE,OAAI,kBAAC,EAAD,CAAOA,GAAIA,EAAIyC,IAAKzC,QAGzC,4BAAQP,UAAU,wBAChBiD,QAASlD,EAAMmD,sBACfC,SAAUpD,EAAMqD,kBACfrD,EAAMqD,iBAAmB,kBAAoB,oBCyCtD,IAUepB,eAVS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,MAAgB,CACtCa,QAASb,EAAMa,QACfX,cAAeF,EAAME,kBAGI,SAAC1B,GAAD,MAAe,CACxC4C,aAAc,kBAAM5C,GL1Cb,SAACA,GAGN,OAFAA,EAXiC,CACnCZ,KAP6B,oBAmBpBe,MDrBWP,yDCsBfQ,MAAK,SAACX,GAAD,OAAcA,EAASY,UAC5BD,MAAK,SAACE,GACLN,EAZgC,CACtCZ,KAVyB,cAWzBa,QAU0BK,WKqC1BP,WAAY,SAACD,GAAD,OAAQE,EAASD,EAAWD,QAG3ByB,EAtDf,YAA+E,IAA/Dc,EAA8D,EAA9DA,QAAwBO,GAAsC,EAArDlB,cAAqD,EAAtCkB,cAAsC,KAAxB7C,WAAwB,uEAC1C4B,oBAAS,IADiC,mBACrExC,EADqE,KAC1DyC,EAD0D,OAElCD,mBAAS,IAFyB,mBAErEkB,EAFqE,KAEtDC,EAFsD,OAG5BnB,oBAAS,GAHmB,mBAGrEgB,EAHqE,KAGnDI,EAHmD,OAI9CpB,oBAAS,GAJqC,mBAIrEG,EAJqE,KAI5DC,EAJ4D,KAM5EC,qBAAU,WACRY,IAAeX,OAAM,kBAAMF,GAAW,QACrC,CAACa,IAEJZ,qBAAU,WACJK,EAAQrB,QACVY,GAAa,GAGfkB,EAAiB,YAAIT,EAAQW,MAAM,EC1BT,QD2BzB,CAACX,IAEJL,qBAAU,WACJK,EAAQrB,SAAW6B,EAAc7B,OACnC+B,GAAoB,GAEpBA,GAAoB,KAErB,CAACV,EAASQ,IAEb,IAAMJ,EAAwBQ,uBAAY,WACxC,IAAMC,EAAWL,EAAc7B,OCtCL,GDwC1B8B,EAAiB,YAAIT,EAAQW,MAAM,EAAGE,OACrC,CAACL,EAAeR,IAEnB,OACE,kBAACD,EAAD,CACEhD,KAAK,QACLD,UAAWA,EACXE,MAAOyC,EACPO,QAASQ,EACTJ,sBAAuBA,EACvBE,iBAAkBA,O,iBEjCTpC,ICTTC,EAAevB,GDJrB,YAAmC,IAAnBqB,EAAkB,EAAlBA,KACd,OADgC,wBAE9B,yBAAKf,UAAU,WACb,yBAAKA,UAAU,oCACb,0BAAMA,UAAU,mBAAkB,kBAAC,IAAD,MAAlC,IAA6C,gCAASe,EAAKQ,KAC3D,0BAAMvB,UAAU,yBAAwB,kBAAC,IAAD,MAAxC,IAA6De,EAAKS,KAAOT,EAAKS,KAAKC,OAAS,KAC5F,0BAAMzB,UAAU,qBAAoB,kBAAC,IAAD,MAApC,IAAiD,IAAI0B,KAAiB,IAAZX,EAAKY,MAAaC,mBAE7EgC,IAAgB7C,EAAK8C,UC4B5B,IAQMC,EAAmB9B,aARD,SAAC,EAAD,OAAG+B,EAAH,EAAGA,QAAaxD,EAAhB,EAAgBA,GAAhB,MAA0B,CAChDyD,cAAeD,EAAQE,SAAS1D,OAGP,SAACE,GAAD,MAAe,CACxCyD,aAAc,SAAC3D,GAAD,OAAQE,ECnCI,SAACF,GAC3B,OAAO,SAACE,GACN,OAAOG,MAAMN,EAAQC,IAClBM,KAAKZ,GACLY,MAAK,SAACX,GAAD,OAAcA,EAASY,UAC5BD,MAAK,SAACE,GACLN,EAXgC,CACtCZ,KAHyB,cAIzBa,QAS0BK,QD6BKmD,CAAa3D,QAGrByB,EAtCzB,YAAiE,IAA9CkC,EAA6C,EAA7CA,aAAc3D,EAA+B,EAA/BA,GAAIyD,EAA2B,EAA3BA,cAA2B,wDAC5B5B,oBAAS,IADmB,mBACvDxC,EADuD,KAC5CyC,EAD4C,OAEhCD,mBAAS,IAFuB,mBAEvD2B,EAFuD,KAE9CI,EAF8C,OAGhC/B,oBAAS,GAHuB,mBAGvDG,EAHuD,KAG9CC,EAH8C,KAgB9D,OAXAC,qBAAU,WACRyB,EAAa3D,GAAImC,OAAM,kBAAMF,GAAW,QACvC,CAACjC,EAAI2D,IAERzB,qBAAU,WACJuB,IACFG,EAAW,eAAKH,IAChB3B,GAAa,MAEd,CAAC2B,IAGF,yBAAKhE,UAAU,mBACb,kBAAC,EAAD,CACEH,KAAK,UACLC,MAAOyC,EACP3C,UAAWA,EACXmB,KAAMgD,IAGPA,EAAQvC,MAAQuC,EAAQvC,KAAKuB,KAAI,SAAAxC,GAAE,OAAI,kBAACuD,EAAD,CAAkBvD,GAAIA,EAAIyC,IAAKzC,WEjC9D6D,EFgDAN,EGWf,IAIe9B,eAJS,SAAC,GAAD,MAAgB,CACtCG,cADsB,EAAGF,MACJE,iBAGRH,EAzDf,YAA8C,IAA5BG,EAA2B,EAA3BA,cAAkBpC,EAAS,mCACXqC,mBAAS,IADE,mBACpC6B,EADoC,KAC1BI,EAD0B,OAECjC,mBAAS,IAFV,mBAEpCkC,EAFoC,KAEpBC,EAFoB,OAGOnC,oBAAS,GAHhB,mBAGpCoC,EAHoC,KAGjBC,EAHiB,KAKnCrD,EAAYrB,EAAM2E,MAAMC,OAAxBvD,QAERqB,qBAAU,WACR,IAAMR,EAAQE,EAAcf,GACxBa,GACFoC,EAAYpC,EAAMT,QAEnB,CAACW,EAAef,IAEnBqB,qBAAU,WACR8B,EAAkB,YAAIN,EAASR,MAAM,ELtBV,OKuB1B,CAACQ,IAEJxB,qBAAU,WACJwB,EAASxC,SAAW6C,EAAe7C,OACrCgD,GAAqB,GAErBA,GAAqB,KAEtB,CAACR,EAAUK,IAEd,IAAMM,EAAyBlB,uBAAY,WACzC,IAAMC,EAAWW,EAAe7C,OLlCL,EKoC3B8C,EAAkB,YAAIN,EAASR,MAAM,EAAGE,OACvC,CAACW,EAAgBL,IAEpB,OACE,6BACE,kBAAC,EAAD,CAAO1D,GAAIa,IAEVkD,EAAevB,KAAI,SAACxC,GAAD,OAClB,kBAAC,EAAD,CAASA,GAAIA,EAAIyC,IAAKzC,OAGxB,yBAAKP,UAAU,kBACb,4BACEA,UAAU,MACViD,QAAS2B,EACTzB,SAAUqB,GAETA,EAAoB,mBAAqB,sBCnBrCK,MAhCf,SAAuBlF,GA6BrB,OA3BA,SAA4BI,GAE1B,OACE,yBAAKC,UAAU,gBACb,4BAAQA,UAAU,UAChB,yBAAKA,UAAU,aACb,4BACE,kBAAC,IAAD,CAAMqB,GAAG,KAAT,iBAIN,8BACE,yBAAKrB,UAAU,aACb,kBAACL,EAAcI,KAGnB,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,aACb,0BAAMA,UAAU,gBAAhB,eACc,uBAAG6B,KAAK,oCAAoCE,OAAO,OAAOT,MAAM,kBAAhE,wBCjBpBwD,EAAeD,EAAcE,GAC7BC,EAAiBH,EAAcI,GAWtBC,MATf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAUC,eAChB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWT,IACjC,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,YAAYC,UAAWP,M,uBCJhCQ,EALEC,YAAgB,CAC/BxD,MCA0B,WAOtB,IANJyD,EAMG,uDANK,CACNC,YAAY,EACZ7C,QAAS,GACTX,cAAe,IAEjByD,EACG,uCACH,OAAQA,EAAO/F,MACb,IfZ2B,kBeazB,OAAO,eACF6F,EADL,CAEEC,YAAY,IAEhB,IfhBuB,ceiBrB,OAAO,eACFD,EADL,CAEEC,YAAY,EACZ7C,QAAQ,YAAK8C,EAAOlF,WAExB,IfnBqB,YeoBnB,OAAO,eACFgF,EADL,CAEEvD,cAAc,eACTuD,EAAMvD,cADE,eAEVyD,EAAOlF,QAAQH,GAAKqF,EAAOlF,YAGlC,QACE,OAAOgF,ID5BX3B,QEL4B,WAKxB,IAJJ2B,EAIG,uDAJK,CACNzB,SAAU,IAEZ2B,EACG,uCACH,OAAQA,EAAO/F,MACb,IPNuB,cOOrB,OAAO,eACF6F,EADL,CAEEzB,SAAS,eACJyB,EAAMzB,SADH,eAEL2B,EAAOlF,QAAQH,GAAKqF,EAAOlF,YAGlC,QACE,OAAOgF,MCbPG,EAAmBC,OAAOC,sCAAwCC,IAOzDC,EALDC,YACZC,EACAN,EAAiBO,YAAgBC,O,MCGfC,QACW,cAA7BR,OAAOS,SAASC,UAEe,UAA7BV,OAAOS,SAASC,UAEhBV,OAAOS,SAASC,SAAS9B,MACvB,2DCTN+B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUV,MAAOA,GACf,kBAAC,EAAD,QAGJW,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnG,MAAK,SAAAoG,GACJA,EAAaC,gBAEdxE,OAAM,SAAA5C,GACLqH,QAAQrH,MAAMA,EAAMsH,a","file":"static/js/main.707cd854.chunk.js","sourcesContent":["import React from 'react';\n\nfunction withLoading(Component) {\n\n  function LoadingComponent({ isLoading, type, error, ...props }) {\n\n    if (error) {\n      return (\n        <div className=\"error-message\">\n          <span>Error Occured!</span>\n        </div>\n      );\n    }\n\n    if (!isLoading) {\n      return (<Component {...props} />)\n    }\n\n    switch (type) {\n      case ('story'):\n        return (\n          <div className=\"loading-bar\">\n            <div className=\"loading-bar__heading\"></div>\n            <div className=\"loading-bar__description\"></div>\n          </div>\n        );\n      case ('comment'):\n        return (\n          <div className=\"loading-bar\">\n            <div className=\"loading-bar__description\"></div>\n          </div>\n        );\n      default:\n        return (<div>Loading...</div>);\n    }\n  }\n\n  return LoadingComponent;\n}\n\nexport default withLoading;","function handleError(response) {\n  if (!response.ok) throw Error(response);\n  return response;\n}\n\nexport { handleError };","const baseUrl = 'https://hacker-news.firebaseio.com/v0';\nconst topStoriesUrl = baseUrl + '/topstories.json';\nconst itemUrl = (id) => `${baseUrl}/item/${id}.json`;\n\nexport { topStoriesUrl, itemUrl };","import { handleError } from '../api/helpers';\nimport { topStoriesUrl, itemUrl } from '../api/endpoints';\n\nexport const REQUEST_STORIES = 'REQUEST_STORIES';\nexport const SET_STORIES = 'SET_STORIES';\n\nexport const REQUEST_STORY = 'REQUEST_STORY';\nexport const SET_STORY = 'SET_STORY';\n\nexport const requestStories = () => ({\n  type: REQUEST_STORIES,\n});\n\nexport const setStories = (stories) => ({\n  type: SET_STORIES,\n  payload: stories,\n});\n\nexport const fetchStories = () => {\n  return (dispatch) => {\n    dispatch(requestStories());\n\n    return fetch(topStoriesUrl)\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(setStories(data));\n      });\n  };\n};\n\nexport const requestStory = (id) => ({\n  type: REQUEST_STORY,\n  payload: id,\n});\n\nexport const setStory = (story) => ({\n  type: SET_STORY,\n  payload: story,\n});\n\nexport const fetchStory = (id) => {\n  return (dispatch) => {\n    dispatch(requestStory(id));\n\n    return fetch(itemUrl(id))\n      .then(handleError)\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(setStory(data));\n      });\n  };\n};\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { FiUser, FiMessageSquare, FiLink, FiClock } from 'react-icons/fi';\n\n\nfunction Post({ data, ...props }) {\n\n  const { storyId } = useParams();\n  const headingElement = storyId ?\n    <h1 className=\"story__title\"><Link to={`/${data.id}`}>{data.title}</Link></h1> :\n    <h2 className=\"story__title\"><Link to={`/${data.id}`}>{data.title}</Link></h2>\n\n  return (\n    <div>\n      {headingElement}\n      <div className=\"description story__description\">\n        <span className=\"description__by\">\n          <FiUser /> <strong>{data.by}</strong>\n        </span>\n        <span className=\"description__comments\">\n          <FiMessageSquare /> {data.kids ? data.kids.length : '0'}\n        </span>\n        <span className=\"description__time\">\n          <FiClock /> {new Date(data.time * 1000).toLocaleString()}\n        </span>\n        <span className=\"description__permalink\">\n          <a href={data.url} target=\"_new\" title={data.title}>\n            <FiLink />\n          </a>\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchStory } from '../../actions/storyActions';\n\nimport Post from './Post';\nimport withLoading from '../../hoc/withLoading';\n\nconst EnhancedPost = withLoading(Post);\n\nfunction Story({ fetchStory, id, storyDetail }) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [story, setStory] = useState({});\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    fetchStory(id).catch(() => setIsError(true));\n  }, [id, fetchStory]);\n\n  useEffect(() => {\n    if (storyDetail) {\n      setStory({ ...storyDetail });\n      setIsLoading(false);\n    }\n  }, [storyDetail]);\n\n  return (\n    <div className=\"story\">\n      <EnhancedPost\n        type=\"story\"\n        error={isError}\n        isLoading={isLoading}\n        data={story}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ story }, { id }) => ({\n  storyDetail: story.storiesDetail[id],\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchStory: (id) => dispatch(fetchStory(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Story);\n","import Story from './Story';\n\nexport default Story;","import React from 'react';\n\nimport Story from '../Story';\n\nfunction List({ stories, ...props }) {\n  return (\n    <div>\n      <div className=\"stories-list\">\n        {stories.map(id => <Story id={id} key={id} />)}\n      </div>\n\n      <button className=\"btn stories-list__btn\"\n        onClick={props.handleLoadMoreStories}\n        disabled={props.allStoriesLoaded}>\n        {props.allStoriesLoaded ? 'No More Stories' : 'More Stories'}\n      </button>\n\n    </div>\n  )\n}\n\nexport default List;","import React, { useState, useEffect, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport withLoading from '../../hoc/withLoading';\nimport { storiesPerLoad } from '../../constants';\nimport { fetchStories, fetchStory } from '../../actions/storyActions';\n\nimport List from '../../components/List';\n\nconst EnchancedList = withLoading(List);\n\nfunction Home({ stories, storiesDetail, fetchStories, fetchStory, ...props }) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeStories, setActiveStories] = useState([]);\n  const [allStoriesLoaded, setAllStoriesLoaded] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    fetchStories().catch(() => setIsError(true));\n  }, [fetchStories]);\n\n  useEffect(() => {\n    if (stories.length) {\n      setIsLoading(false);\n    }\n\n    setActiveStories([...stories.slice(0, storiesPerLoad)]);\n  }, [stories]);\n\n  useEffect(() => {\n    if (stories.length === activeStories.length) {\n      setAllStoriesLoaded(true);\n    } else {\n      setAllStoriesLoaded(false);\n    }\n  }, [stories, activeStories]);\n\n  const handleLoadMoreStories = useCallback(() => {\n    const endIndex = activeStories.length + storiesPerLoad;\n\n    setActiveStories([...stories.slice(0, endIndex)]);\n  }, [activeStories, stories]);\n\n  return (\n    <EnchancedList\n      type=\"story\"\n      isLoading={isLoading}\n      error={isError}\n      stories={activeStories}\n      handleLoadMoreStories={handleLoadMoreStories}\n      allStoriesLoaded={allStoriesLoaded}\n    />\n  );\n}\n\nconst mapStateToProps = ({ story }) => ({\n  stories: story.stories,\n  storiesDetail: story.storiesDetail,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchStories: () => dispatch(fetchStories()),\n  fetchStory: (id) => dispatch(fetchStory(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","export const storiesPerLoad = 10;\nexport const commentsPerLoad = 1;","import React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { FiUser, FiMessageSquare, FiClock } from 'react-icons/fi';\n\nfunction Post({ data, ...props }) {\n  return (\n    <div className=\"comment\">\n      <div className=\"description comment__description\">\n        <span className=\"description__by\"><FiUser /> <strong>{data.by}</strong></span>\n        <span className=\"description__comments\"><FiMessageSquare /> {data.kids ? data.kids.length : '0'}</span>\n        <span className=\"description__time\"><FiClock /> {new Date(data.time * 1000).toLocaleString()}</span>\n      </div>\n      {ReactHtmlParser(data.text)}\n    </div>\n  )\n}\n\nexport default Post;","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchComment } from '../../actions/commentActions';\n\nimport Post from './Post';\nimport withLoading from '../../hoc/withLoading';\n\nconst EnhancedPost = withLoading(Post);\n\nfunction Comment({ fetchComment, id, commentDetail, ...props }) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [comment, setComment] = useState({});\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    fetchComment(id).catch(() => setIsError(true));\n  }, [id, fetchComment]);\n\n  useEffect(() => {\n    if (commentDetail) {\n      setComment({ ...commentDetail });\n      setIsLoading(false);\n    }\n  }, [commentDetail]);\n\n  return (\n    <div className=\"comment-wrapper\">\n      <EnhancedPost\n        type=\"comment\"\n        error={isError}\n        isLoading={isLoading}\n        data={comment}\n      />\n\n      {comment.kids && comment.kids.map(id => <ConnectedComment id={id} key={id} />)}\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ comment }, { id }) => ({\n  commentDetail: comment.comments[id],\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchComment: (id) => dispatch(fetchComment(id)),\n});\n\nconst ConnectedComment = connect(mapStateToProps, mapDispatchToProps)(Comment);\n\nexport default ConnectedComment;\n","import { itemUrl } from '../api/endpoints';\nimport { handleError } from '../api/helpers';\n\nexport const SET_COMMENT = 'SET_COMMENT';\n\nexport const setComment = (comment) => ({\n  type: SET_COMMENT,\n  payload: comment,\n});\n\nexport const fetchComment = (id) => {\n  return (dispatch) => {\n    return fetch(itemUrl(id))\n      .then(handleError)\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(setComment(data));\n      });\n  };\n};\n","import Comment from './Comment';\n\nexport default Comment;","import React, { useState, useEffect, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { commentsPerLoad } from '../../constants';\nimport Comment from '../../components/Comment';\n\nimport Story from '../../components/Story/Story';\n\nfunction Detail({ storiesDetail, ...props }) {\n  const [comments, setComments] = useState([]);\n  const [activeComments, setActiveComments] = useState([]);\n  const [allCommentsLoaded, setAllCommentsLoaded] = useState(true);\n\n  const { storyId } = props.match.params;\n\n  useEffect(() => {\n    const story = storiesDetail[storyId];\n    if (story) {\n      setComments(story.kids);\n    }\n  }, [storiesDetail, storyId]);\n\n  useEffect(() => {\n    setActiveComments([...comments.slice(0, commentsPerLoad)]);\n  }, [comments]);\n\n  useEffect(() => {\n    if (comments.length === activeComments.length) {\n      setAllCommentsLoaded(true);\n    } else {\n      setAllCommentsLoaded(false);\n    }\n  }, [comments, activeComments]);\n\n  const handleLoadMoreComments = useCallback(() => {\n    const endIndex = activeComments.length + commentsPerLoad;\n\n    setActiveComments([...comments.slice(0, endIndex)]);\n  }, [activeComments, comments]);\n\n  return (\n    <div>\n      <Story id={storyId} />\n\n      {activeComments.map((id) => (\n        <Comment id={id} key={id} />\n      ))}\n\n      <div className=\"detail-actions\">\n        <button\n          className=\"btn\"\n          onClick={handleLoadMoreComments}\n          disabled={allCommentsLoaded}\n        >\n          {allCommentsLoaded ? 'No More Comments' : 'More Comments'}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ story }) => ({\n  storiesDetail: story.storiesDetail,\n});\n\nexport default connect(mapStateToProps)(Detail);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction withContainer(Component) {\n\n  function containerComponent(props) {\n\n    return (\n      <div className=\"main-wrapper\">\n        <header className=\"header\">\n          <div className=\"container\">\n            <h1>\n              <Link to=\"/\">HackerNews</Link>\n            </h1>\n          </div>\n        </header>\n        <main>\n          <div className=\"container\">\n            <Component {...props} />\n          </div>\n        </main>\n        <footer className=\"footer\">\n          <div className=\"container\">\n            <span className=\"footer__text\">\n              Built using <a href=\"https://github.com/HackerNews/API\" target=\"_new\" title=\"HackerNews API\">HackerNews API</a>\n            </span>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n\n  return containerComponent;\n}\n\nexport default withContainer;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './pages/Home/Home';\nimport Detail from './pages/Detail/Detail';\nimport withContainer from './hoc/withContainer';\n\nconst EnhancedHome = withContainer(Home);\nconst EnhancedDetail = withContainer(Detail);\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/\" component={EnhancedHome} />\n      <Route exact path=\"/:storyId\" component={EnhancedDetail} />\n    </Router>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport { storyReducer } from './storyReducer';\nimport { commentReducer } from './commentReducer';\n\nconst reducers = combineReducers({\n  story: storyReducer,\n  comment: commentReducer,\n});\n\nexport default reducers;\n","import {\n  REQUEST_STORIES,\n  SET_STORIES,\n  SET_STORY,\n} from '../actions/storyActions';\n\nexport const storyReducer = (\n  state = {\n    isFetching: false,\n    stories: [],\n    storiesDetail: {},\n  },\n  action\n) => {\n  switch (action.type) {\n    case REQUEST_STORIES:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case SET_STORIES:\n      return {\n        ...state,\n        isFetching: false,\n        stories: [...action.payload],\n      };\n    case SET_STORY:\n      return {\n        ...state,\n        storiesDetail: {\n          ...state.storiesDetail,\n          [action.payload.id]: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import { SET_COMMENT } from '../actions/commentActions';\n\nexport const commentReducer = (\n  state = {\n    comments: {},\n  },\n  action\n) => {\n  switch (action.type) {\n    case SET_COMMENT:\n      return {\n        ...state,\n        comments: {\n          ...state.comments,\n          [action.payload.id]: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\n\nimport reducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './store';\nimport './styles/index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}